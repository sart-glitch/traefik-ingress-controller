deployment:
  # -- Enable deployment
  enabled: true
  # -- Deployment or DaemonSet
  kind: Deployment
  # -- Number of pods of the deployment (only applies when kind == Deployment)
  replicas: 2

# -- Create a default IngressClass for Traefik
ingressClass:
  enabled: true
  isDefaultClass: false
  name: traefik-external

## Create an IngressRoute for the dashboard
ingressRoute:
  dashboard:
    # -- Create an IngressRoute for the dashboard
    enabled: false

service:
  type: LoadBalancer
  # -- Additional annotations applied to both TCP and UDP services (e.g. for cloud provider specific config)
  annotations:
  # -- Additional annotations for TCP service only
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: '300'
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:ap-south-1:730410800105:certificate/09fc7c5e-238c-4aaf-bf42-4a895fbd2b59
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-type: nlb

ports:
  traefik:
    expose:
      default: false
    port: 9000
  metrics:
    expose:
      default: false
    port: 9100
  web:
    expose:
      default: true
    exposedPort: 80
    port: 8000
    redirectTo:
      port: websecure
  websecure:
    expose:
      default: true
    exposedPort: 443
    port: 8443
    tls:
      enabled: false
providers:
  kubernetesCRD:
    ingressClass: traefik-external
    # -- Load Kubernetes IngressRoute provider
    enabled: true
    # -- Allows IngressRoute to reference resources in namespace other than theirs
    allowExternalNameServices: true
  kubernetesIngress:
    enabled: true
    allowExternalNameServices: true
    # IP used for Kubernetes Ingress endpoints
    publishedService:
      enabled: true
      # Published Kubernetes Service to copy status from. Format: namespace/servicename
      # By default this Traefik service
      pathOverride: "traefik/traefik"
    #ingressEndpoint:
     # publishedService: traefik/traefik
resources: 
  requests:
    cpu: "100m"
    memory: "50Mi"
  limits:
    cpu: "100m"
    memory: "128Mi"

securityContext:
  capabilities:
    drop: [ALL]
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false

rbac:
  enabled: true

globalArguments:
- --global.checknewversion=false
- --global.sendanonymoususage=false
- --api.insecure=true

additionalArguments:
- --global.checknewversion=false
- --api=true
- --api.dashboard=true
- --accesslog=true
- --accesslog.format=json
- --accesslog.fields.defaultmode=keep
- --accesslog.fields.headers.defaultmode=drop
- --log.level=info
- --entrypoints.web.address=:8000
- --entrypoints.websecure.address=:8443
- --entrypoints.metrics.address=:9100
- --entrypoints.web.http.redirections.entryPoint.to=websecure
- --entrypoints.web.http.redirections.entryPoint.scheme=https
- --entrypoints.web.http.redirections.entryPoint.permanent=true
- --ping
- --providers.kubernetesingress
- --providers.kubernetescrd
- --metrics.prometheus=true
- --metrics.prometheus.entrypoint=metrics
- --metrics.prometheus.addrouterslabels=true
- --serversTransport.insecureSkipVerify=true

